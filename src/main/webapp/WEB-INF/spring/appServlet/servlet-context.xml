<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.0.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 정적인 파일들을 DispatcherServlet을 거치지 않고 접근할 수 있도록 하는 설정 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/images/**" location="/images/" />
	<resources mapping="/js/**" location="/js/" />
	<resources mapping="/inc/**" location="/inc/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Password Security -->
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- Interceptor 설정 ==================================== -->
	<!-- <interceptors> <interceptor> <mapping path="/user/**"/> <mapping path="/admin/**"/> 
		<beans:bean class="com.common.interceptor.LoginCheckInterceptor"/> </interceptor> 
		<interceptor> <mapping path="/admin/**"/> <beans:bean class="com.common.interceptor.AdminCheckInterceptor"/> 
		</interceptor> </interceptors> -->

	<!-- 파일업로드를 위한 MultipartResolver 설정 ================================== -->
	<!--주의: 빈의 id는 반드시 multipartResolver로 등록해야 한다. 다른 아이디를 주면 DispatcherServlet이 
		MultipartResolver로 인식하질 못한다. -->
	<!-- <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		<beans:property name="defaultEncoding" value="utf-8"/> <beans:property name="maxUploadSize" 
		value="-1"/> </beans:bean> <beans:bean id="upDir" class="java.lang.String"> 
		<beans:constructor-arg index="0" value="/Users/jaewonyou/myjava/Upload"/> 
		</beans:bean> -->
		
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="maxUploadSize" value="-1" />
		<!-- value 에 -1 을 주면 무제한 업로드 가능하다. -->
	</beans:bean>
	
	<beans:bean id="upDir" class="java.lang.String">
		<beans:constructor-arg index="0" value="C:/Myjava/Upload" />	
	</beans:bean>	
	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅 -->
	<beans:bean id="googleConnectionFactory" class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg value="613439887262-cle2tnbgtag36u3blg4sf7scvf3peho4.apps.googleusercontent.com" />
		<beans:constructor-arg value="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" />
	</beans:bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="openid https://www.googleapis.com/auth/userinfo.email" />
		<beans:property name="redirectUri" value="http://localhost:9090/matchingBoard/user/callbackGoogle" />
	</beans:bean>

	<!-- 스캔 대상 패키지를 등록=================================== -->
	<context:component-scan base-package="com.multi" />



	
	
	<!-- WebSocket Handler -->
	<!-- 
	<websocket:handlers>
		<websocket:mapping handler="chattingHandler" path="/echo"/>
		<websocket:sockjs></websocket:sockjs>
	</websocket:handlers>
	
	<beans:bean id="chattingHandler" class="com.multi.chatting.ChattingHandler"/>
	 -->
</beans:beans>
